lua_need_request_body on;

location = /auth {
    internal;

    content_by_lua_block {
        local http = require "resty.http"
        local cjson = require "cjson.safe"

        local httpc = http.new()

        local auth_header = ngx.var.http_authorization

        local token = auth_header and auth_header:match("Bearer%s+(.+)")
        if not token then
            ngx.status = 401
            return
        end

        local body_data = cjson.encode({ access_token = token })

        local api_token = os.getenv("KT_AUTH_API_TOKEN")
        if not api_token then
            ngx.status = 500
            return
        end

        local res, err = httpc:request_uri("http://kt-auth-api:8080/introspect", {
            method = "POST",
            body = body_data,
            headers = {
                ["Content-Type"] = "application/vnd.kaiqkt_auth_introspect_v1+json",
                ["Authorization"] = api_token
            }
        })

        if not res then
            ngx.status = 500
            return
        end

        local response_json, json_err = cjson.decode(res.body or "")
        if not response_json or type(response_json) ~= "table" then
            ngx.status = 500
            return
        end

        if not response_json.active then
            ngx.status = 401
            return
        end
    }
}
