set $itinerary_upstream http://kt-itinerary-api:8080;

# POST /api/itinerary/user
location = /api/itinerary/user {
    access_by_lua_block {
        local method = ngx.var.request_method

        if method == "POST" then
            return
        end

        local res = ngx.location.capture("/auth")

        if res.status ~= 200 then
            return ngx.exit(res.status)
        end
    }

    rewrite ^/api/itinerary(/.*)$ $1 break;
    proxy_pass $itinerary_upstream;
}

# POST /api/itinerary/user/{id}/toggle-follow
location ~ ^/api/itinerary/user/\w+/toggle-follow$ {
    limit_except POST { deny all; }

    auth_request /auth;
    auth_request_set $auth_status $upstream_status;

    rewrite ^/api/itinerary(/.*)$ $1 break;
    proxy_pass $itinerary_upstream;
}

# GET /api/itinerary/user/{id}
location ~ ^/api/itinerary/user/[^/]+$ {
    limit_except GET { deny all; }

    auth_request /auth;
    auth_request_set $auth_status $upstream_status;

    rewrite ^/api/itinerary(/.*)$ $1 break;
    proxy_pass $itinerary_upstream;
}

##
# ROUTE ROUTES
##

# POST, PATCH /api/itinerary/route
location = /api/itinerary/route {
    limit_except POST PATCH { deny all; }

    auth_request /auth;
    auth_request_set $auth_status $upstream_status;

    rewrite ^/api/itinerary(/.*)$ $1 break;
    proxy_pass $itinerary_upstream;
}

# GET, DELETE /api/itinerary/route/{id}
location ~ ^/api/itinerary/route/[^/]+$ {
    limit_except GET DELETE { deny all; }

    auth_request /auth;
    auth_request_set $auth_status $upstream_status;

    rewrite ^/api/itinerary(/.*)$ $1 break;
    proxy_pass $itinerary_upstream;
}

# GET /api/itinerary/routes
location = /api/itinerary/routes {
    limit_except GET { deny all; }

    auth_request /auth;
    auth_request_set $auth_status $upstream_status;

    rewrite ^/api/itinerary(/.*)$ $1 break;
    proxy_pass $itinerary_upstream;
}

# GET /api/itinerary/routes/{id}
location ~ ^/api/itinerary/routes/[^/]+$ {
    limit_except GET { deny all; }

    auth_request /auth;
    auth_request_set $auth_status $upstream_status;

    rewrite ^/api/itinerary(/.*)$ $1 break;
    proxy_pass $itinerary_upstream;
}

# GET /api/itinerary/search
location = /api/itinerary/search {
    limit_except GET {
        deny all;
    }

    auth_request /auth;
    auth_request_set $auth_status $upstream_status;

    rewrite ^/api/itinerary(/.*)$ $1 break;
    proxy_pass $itinerary_upstream;
}
